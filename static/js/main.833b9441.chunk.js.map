{"version":3,"sources":["images/logoBQ.svg","components/Navbar.js","actions/waiter.js","actions/actionTypes.js","components/Take_order/OrderCheck.js","components/Button.js","reducers/index.js","reducers/waiter.js","store/index.js","store/initialState.js","components/Take_order/BreakfastItems.js","components/Take_order/LunchItems.js","components/Take_order/MenuCategories.js","components/Take_order/MenuOptions.js","components/Views/WaiterView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Col","md","src","logoBQ","alt","href","React","Component","addItemtoOrder","dispatch","item","type","deleteItemtoOrder","OrderCheck","state","clientName","handleClick","name","console","log","_this","handleDelete","props","delete","_this2","this","Table","waiter","order","map","price","onClick","index_es","icon","faTimes","colSpan","reduce","sum","htmlFor","onChange","handleChange","value","id","placeholder","connect","Object","objectSpread","Button","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","options","concat","combineReducers","arguments","length","undefined","action","filter","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","BreakfastItems","menu","breakfastFood","components_Button","add","_this3","breakfastDrinks","category","sandwiches","drinks","LunchItems","lunchFood","lunchExtras","_this4","lunchDrinks","hamburgers","accompaniments","MenuCategories","ReactDom","render","es","store","Take_order_BreakfastItems","document","getElementById","Take_order_LunchItems","BreakfastLetter","LunchLetter","breakfast","lunch","MenuOptions","Take_order_MenuCategories","MenuItems","TakeOrder","components_Navbar","Take_order_MenuOptions","Take_order_OrderCheck","addItem","App","WaiterView","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.833b9441.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoBQ.c9a086ed.svg\";","import React from 'react';\nimport logoBQ from '../images/logoBQ.svg';  //createreactapp se encarga de empaquetar la imagen en la var logoBQ\nimport '../styles/Navbar.css';\nimport { Col } from 'react-bootstrap';\n\n//en img src no se puede dar un 'string'en cambio ponemos en {props} la var de la imagen para que la evalue\n//para dar estilo siempre utilizar className\n//la creación de componentes con class se usa preferentemente cuando el componente tiene\nclass Navbar extends React.Component{\nrender(){\n    return <nav className=\"nav\">\n       <Col md={2} >\n          <figure className=\"logo\">\n            <img src={logoBQ} alt=\"BurgerQueenlogo\"/>      \n          </figure>\n       </Col>\n       <Col md={10}>\n         <ul className=\"options\">\n           <li><a href=\"menu\">Menu</a></li>\n           <li><a href=\"orders\">Pedido</a></li>\n           <li><a href=\"records\">Historial</a></li>\n         </ul> \n        </Col>  \n    </nav>;\n    //agregar un div vació para irlo rellenado con las pantallas de pedidos\n}\n\n}\n\nexport default Navbar;\n","// Redux actions are nothing more than JavaScript objects\n// Every action needs a type property for describing how the state should change.\n// Archivo con las acciones referentes a la cocina\n// Terminar pedido\n\nimport { addItems, deleteItems } from './actionTypes';\n\n\nexport const addItemtoOrder = dispatch => (item) => {\n  dispatch({\n    type: addItems,\n    item,\n  });\n};\n\nexport const deleteItemtoOrder = dispatch => (item) => {\n  dispatch({\n    type: deleteItems,\n    item,\n  });\n};\n","// Archivo de referencia para saber como se nombro cada estado\nexport const addItems = 'addItems';\nexport const deleteItems = 'deleteItems';\nexport const sendOrder = 'sendOrder';\nexport const orderReady = 'orderReady';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { deleteItemtoOrder } from '../../actions/waiter';\n\n\nclass OrderCheck extends React.Component {\n\n    state = {\n      clientName: '', // Inicializamos el estado para que no salga error de cambio de controlado a no controlado\n      \n    };\n\n\n  //  handleChange = e =>{\n  //   // console.log({\n  //   // name: e.target.name,\n  //   //   value: e.target.value,\n  //   // });  \n  //   this.setState({\n  //     [e.target.name]:e.target.value     // para que generalice el nombre donde guarda el valor\n    //  })\n  // };\n  \n   handleClick = (name) => {\n     console.log(\"Button was clicked\");\n     console.log(this.state);  \n   };\n\n   handleDelete = (item) => {\n     this.props.delete(item);\n   }\n\n   render() {\n     return (\n      <element>\n        <h2>Pedido</h2>\n        <Table>\n          <tbody>\n            {this.props.waiter.order.map(item =>\n              <tr>\n                <td>{item.name}</td>\n                <td className=\"text-right\">${item.price}</td>\n                <td className=\"text-right\"><button onClick={() => this.handleDelete(item)}><FontAwesomeIcon icon={faTimes}/></button></td> \n              </tr>\n            )}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colSpan=\"4\">\n                Total: $\n                {this.props.waiter.order.reduce((sum, item) => sum + item.price, 0)}\n              </td>\n            </tr>\n          </tfoot>\n        </Table>\n        <form>\n          <label htmlFor=\"name\">\n            Nombre\n            <input className=\"sendOrder\" onChange={this.handleChange} value={this.state.clientName} id=\"name\" name=\"clientName\" type=\"text\" placeholder=\"Nombre del cliente\" />\n          </label>\n        </form>\n        <button onClick={this.handleClick} type=\"button\">Enviar a cocina</button>\n      </element>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    delete: deleteItemtoOrder(dispatch),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(OrderCheck);\n","import React from 'react';\nimport '../styles/Button.css';\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.options();\n  }\n\n  render() {\n    return (\n      <button type=\"button\" className={`genericbutton ${this.props.className}`} onClick={this.handleClick}>{this.props.name}</button>\n\n    );\n  }\n}\n\n\nexport default Button;\n","// Usar combine reducers para combinar todos los reducers creados, debemos importarlos a store\n// reducers produce the state of your application.\n// A reducer is just a JavaScript function. A reducer takes\n// two parameters: the current state and an action\n\nimport { combineReducers } from 'redux';\n// import kitchen from './kitchen';\nimport waiter from './waiter';\n\nexport default combineReducers({\n  // kitchen,\n  waiter,\n});\n","import { addItems, deleteItems } from '../actions/actionTypes';\n\nexport default (\n  state = {\n    order: [],\n  },\n  action,\n) => {\n  switch (action.type) {\n    case addItems:\n      return {\n        ...state,\n        order: state.order.concat([action.item]),\n      };\n    case deleteItems:\n      return {\n        ...state,\n        order: state.order.filter(item => item.name !== [action.item.name])\n      };\n    default: return state;\n  }\n};\n","// Recuerda importar composeWithDevTools, para ver la consola de redux.\n// También importar los reducer\n// the state of the whole app lives inside the store\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\nimport state from './initialState';\n\nexport default createStore(\n  reducer,\n  state,\n  composeWithDevTools(applyMiddleware(thunkMiddleware)),\n);\n","// poner el estado inicial de la aplicación\n\nexport default {\n\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../Button';\nimport menu from '../../data/menu.json';\nimport { addItemtoOrder } from '../../actions/waiter';\n\nclass BreakfastItems extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      menu,\n    };\n  }\n\n\n  sandwiches() {\n    const breakfastFood = this.state.menu.breakfastFood.map((item) => {\n      return (\n        <Button className=\"itembutton\" name={item.name} options={() => { this.props.add(item); }} />\n      );\n    });\n    return breakfastFood;\n  }\n\n  drinks() {\n    const breakfastDrinks = this.state.menu.breakfastDrinks.map((item) => {\n      return (\n        <Button className=\"itembutton\" name={item.name} options={() => { this.props.add(item); }} />\n      );\n    });\n    return breakfastDrinks;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.category === 'Sandwiches' ? this.sandwiches() : ''}\n        {this.props.category === 'Drinks' ? this.drinks() : ''}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state,\n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n    add : addItemtoOrder(dispatch), \n  });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BreakfastItems);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../Button';\nimport menu from '../../data/menu.json';\nimport { addItemtoOrder } from '../../actions/waiter';\n\n\nclass LunchItems extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      menu,\n    };\n  }\n\n  hamburgers() {\n    const lunchFood = this.state.menu.lunchFood.map((item) => {\n      return (\n        <Button className=\"itembutton\" name={item.name} options={() => { this.props.add(item); }} />\n      );\n    });\n    return lunchFood;\n  }\n\n  accompaniments() {\n    const lunchExtras = this.state.menu.lunchExtras.map((item) => {\n      return (\n        <Button className=\"itembutton\" name={item.name} options={() => { this.props.add(item); }} />\n      );\n    });\n    return lunchExtras;\n  }\n\n  drinks() {\n    const lunchDrinks = this.state.menu.lunchDrinks.map((item) => {\n      return (\n        <Button className=\"itembutton\" name={item.name} options={() => { this.props.add(item); }} />\n      );\n    });\n    return lunchDrinks;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.category === 'Hamburgers' ? this.hamburgers() : ''}\n        {this.props.category === 'Accompaniments' ? this.accompaniments() : ''}\n        {this.props.category === 'Drinks' ? this.drinks() : ''}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    add: addItemtoOrder(dispatch),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LunchItems);\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from '../../store';\nimport Button from '../Button';\nimport BreakfastItems from './BreakfastItems';\nimport LunchItems from './LunchItems';\n\nclass MenuCategories extends React.Component {\n  BreakfastLetter(category) {\n    ReactDom.render(\n    <Provider store={store}><BreakfastItems category={category} /></Provider>, document.getElementById('showBitems'));\n  }\n\n  LunchLetter(category) {\n    ReactDom.render(<Provider store={store}><LunchItems category={category} /></Provider>, document.getElementById('showLitems'));\n  }\n\n  breakfast() {\n    return (\n      <div>\n        <div>\n          <Button className=\"categorybutton\" name=\"Sandwiches\" options={() => this.BreakfastLetter('Sandwiches')} />\n          <Button className=\"categorybutton\" name=\"Bebidas\" options={() => this.BreakfastLetter('Drinks')} />\n        </div>\n        <div id=\"showBitems\" />\n      </div>\n    );\n  }\n\n  lunch() {\n    return (\n      <div>\n        <div>\n          <Button className=\"categorybutton\" name=\"Hamburguesas\" options={() => this.LunchLetter('Hamburgers')} />\n          <Button className=\"categorybutton\" name=\"Acompañamientos\" options={() => this.LunchLetter('Accompaniments')} />\n          <Button className=\"categorybutton\" name=\"Bebidas\" options={() => this.LunchLetter('Drinks')} />\n        </div>\n        <div id=\"showLitems\" />\n      </div>\n    );\n  }\n\n\n  render() {\n    return (\n      <div>\n        {this.props.category === 'Breakfast' ? this.breakfast() : ''}\n        {this.props.category === 'Lunch/Dinner' ? this.lunch() : ''}\n      </div>\n\n    );\n  }\n}\nexport default (MenuCategories);\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport Button from '../Button';\nimport MenuCategories from './MenuCategories';\n\n\nclass MenuOptions extends React.Component {\n   MenuItems(category) {\n    ReactDom.render(<MenuCategories  category={category} />, document.getElementById('showCategories'));\n  }\n\n  render() {\n    return (\n      <div> \n        <div>                     \n          <Button name=\"Desayuno\" options={() => this.MenuItems('Breakfast')} />\n          <Button name=\"Comida/Cena\" options={() => this.MenuItems('Lunch/Dinner')} />\n        </div>\n        <div id=\"showCategories\" />\n      </div>\n\n    );\n  }\n}\n\n\nexport default MenuOptions;\n","import React from 'react';\nimport Navbar from '../Navbar';\nimport OrderCheck from '../Take_order/OrderCheck';\nimport MenuOptions from '../Take_order/MenuOptions';\nimport { Col } from 'react-bootstrap';\n\nclass TakeOrder extends React.Component {\n  render() {\n    return (\n      <div>\n        <article>\n          <Navbar />\n        </article>\n\n        <div className=\"row\">\n          <Col md={8}>\n            <article>\n              <MenuOptions />\n            </article>\n          </Col>\n          <Col md={4}>\n            <article>\n              <OrderCheck options={this.addItem} />\n            </article>\n          </Col>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TakeOrder;\n","import React from 'react';\nimport './App.css';\nimport TakeOrder from './components/Views/WaiterView';\n\nfunction App() {\n  return (\n    <TakeOrder />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// punto de entrada a la aplicación, archivo principal\n\n\nimport React from 'react';                    // analógo a createElement, para usar JSX SIEMPRE importar react\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';            // analógo a appendChild\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport store from './store';\n\n\n// ReactDOM.render (__qué__, __dónde__);\n// ReactDOM.render siempre recibe un elemento por eso se usan </>\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}